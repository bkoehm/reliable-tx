<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd">

    <tx:annotation-driven transaction-manager="jmsTransactionManager"/>

    <!-- request/reply message producers (at least using temporary queues)
        can't be transactional. See TemporaryQueueReplyManager.createListenerContainer() 
        and QueueReplyReplyManager.createListenerContainer() where answer.setSessionTransacted() 
        is hard-coded to false. -->
    <bean id="jmsConnectionFactoryForRequestReplyMessageProducer"
          class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL"
                  value="vm://localhost?broker.persistent=false&amp;broker.useJmx=false"/>
        <property name="redeliveryPolicyMap" ref="amqRedeliveryPolicyMap"/>
        <property name="trustedPackages">
            <list>
                <value>java.lang</value>
                <value>java.util</value>
            </list>
        </property>
    </bean>

    <bean id="jmsConnectionFactory"
          class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL"
                  value="vm://localhost?broker.persistent=false&amp;broker.useJmx=false"/>
        <property name="redeliveryPolicyMap" ref="amqRedeliveryPolicyMap"/>
        <property name="trustedPackages">
            <list>
                <value>java.lang</value>
                <value>java.util</value>
            </list>
        </property>
    </bean>

    <bean id="jmsTransactionManager"
          class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <property name="transactionSynchronizationName" value="SYNCHRONIZATION_ALWAYS"/>
    </bean>

    <bean id="amqRedeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
        <property name="maximumRedeliveries" value="0"/>
    </bean>

    <bean id="amqRedeliveryPolicyMap"
          class="org.apache.activemq.broker.region.policy.RedeliveryPolicyMap">
        <property name="defaultEntry" ref="amqRedeliveryPolicy"/>
    </bean>

    <bean id="CAMEL_PROPAGATION_REQUIRED" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
        <property name="transactionManager" ref="jmsTransactionManager"/>
    </bean>

    <bean id="redeliveryPolicy" class="org.apache.camel.model.RedeliveryPolicyDefinition">
        <property name="maximumRedeliveries" value="0"/>
    </bean>

    <!-- Camel Redelivery Policy -->
    <bean id="camelRedeliveryPolicy" class="org.apache.camel.model.RedeliveryPolicyDefinition">
        <property name="maximumRedeliveries" value="0"/>
    </bean>

    <!-- Camel Error Handler Builder -->
    <bean id="camelErrorHandlerBuilder" class="org.apache.camel.builder.DefaultErrorHandlerBuilder">
        <property name="redeliveryPolicy" ref="camelRedeliveryPolicy"/>
    </bean>

    <!-- CamelContext -->
    <bean id="camelContext" class="org.apache.camel.spring.SpringCamelContext"/>

    <!-- JmsConfiguration for Camel: used to configure the component -->
    <bean id="jmsConfiguration"
          class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <property name="lazyCreateTransactionManager" value="false"/>
        <property name="transactionManager" ref="jmsTransactionManager"/>
        <property name="transacted" value="true"/>
        <!-- deprecated, but JmsComponent.jmsComponentTransacted() still 
            sets it -->
        <property name="transactedInOut" value="true"/>
    </bean>

    <!-- JMS component for Camel -->
    <bean id="jmsComponent"
          class="org.apache.camel.component.jms.JmsComponent">
        <property name="configuration" ref="jmsConfiguration"/>
        <property name="camelContext" ref="camelContext"/>
    </bean>
    <!-- and add the component to the context -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingBean">
        <property name="targetObject" ref="camelContext"/>
        <property name="targetMethod" value="addComponent"/>
        <property name="arguments">
            <array value-type="java.lang.Object">
                <value>activemq</value>
                <ref bean="jmsComponent"/>
            </array>
        </property>
    </bean>

    <!-- Non-transactional JmsConfiguration for Camel -->
    <bean id="ntJmsConfiguration"
          class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory"
                  ref="jmsConnectionFactoryForRequestReplyMessageProducer"/>
        <property name="lazyCreateTransactionManager" value="false"/>
    </bean>

    <!-- Non-transactional ActiveMQ component for Camel -->
    <bean id="ntActiveMQComponent"
          class="org.apache.camel.component.jms.JmsComponent">
        <property name="configuration" ref="ntJmsConfiguration"/>
        <property name="camelContext" ref="camelContext"/>
    </bean>
    <!-- and add the component to the context -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingBean">
        <property name="targetObject" ref="camelContext"/>
        <property name="targetMethod" value="addComponent"/>
        <property name="arguments">
            <array value-type="java.lang.Object">
                <value>ntActivemq</value>
                <ref bean="ntActiveMQComponent"/>
            </array>
        </property>
    </bean>

    <!-- Non-transactional Producer Template -->
    <bean id="producer"
          class="org.apache.camel.impl.engine.DefaultProducerTemplate"
          init-method="start" destroy-method="stop">
        <constructor-arg index="0" ref="camelContext"/>
    </bean>

    <!-- ReliableTxConsumerBuilder -->
    <bean id="consumerBuilder" class="io.github.bkoehm.reliabletx.camel.ReliableTxConsumerBuilder">
        <property name="transactionPolicyRefName" value="CAMEL_PROPAGATION_REQUIRED"/>
        <property name="transactionManager" ref="jmsTransactionManager"/>
    </bean>

    <!-- bean used as a Camel destination in the tests -->
    <bean id="testReceiverBean" class="io.github.bkoehm.reliabletx.camel.TestReceiverBean">
        <property name="jmsTransactionManager" ref="jmsTransactionManager"/>
    </bean>

    <bean id="jmsListenerContainerFactory"
          class="io.github.bkoehm.reliabletx.camel.jms.EnhancedDefaultMessageListenerContainerFactory"/>

</beans>
