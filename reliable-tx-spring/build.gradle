/*-
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.  The
 * ASF licenses this file to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

// variables in gradle.properties
group = projectGroup
version = projectVersion
sourceCompatibility = jdkCompatibilityVersion
targetCompatibility = jdkCompatibilityVersion

repositories {
    mavenLocal()
    // If using a Maven proxy, put the property settings in
    // ~/.gradle/gradle.properties for default_proxy_url,
    // default_proxy_username and default_proxy_password.
    if (project.hasProperty("default_proxy_url")) {
        maven {
            url project.property("default_proxy_url")
            credentials {
                username project.property("default_proxy_username")
                password project.property("default_proxy_password")
            }
        }
    }
    mavenCentral()
}

dependencies {
    // Versions are set in gradle.properties

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    testImplementation "org.slf4j:slf4j-log4j12:$slf4jVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    // Embedded HSQLDB for testing
    testImplementation group: 'org.hsqldb', name: 'hsqldb', version: '2.6.1'
    
    // Spring
    implementation "org.springframework:spring-core:$springVersion"
    implementation "org.springframework:spring-tx:$springVersion"
    testImplementation "org.springframework:spring-beans:$springVersion"
    implementation "org.springframework:spring-context:$springVersion"
    implementation "org.springframework:spring-jdbc:$springVersion"
}

jar { from "../LICENSE" }

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    from "../LICENSE"
    archiveClassifier = "sources"
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    from "../LICENSE"
    archiveClassifier = "javadoc"
}

artifacts {
    archives jar, javadocJar, sourceJar
}

if (project.hasProperty("default_ossrh_url")) {
    signing {
        useGpgCmd()
        sign publishing.publications
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name projectName
                    description projectDescription
                    url githubWebUrl
                    scm {
                        url githubWebUrl
                        connection "scm:git:${githubWebUrl}.git"
                        developerConnection "scm:git:${githubWebUrl}.git"
                        tag "v${project.version}"
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    issueManagement {
                        url "${githubWebUrl}/issues"
                    }
                    developers {
                        developer {
                            id 'bkoehm'
                            name 'Brian Koehmstedt'
                        }
                    }
                }
            }
        }
    }
    repositories {
        if (project.hasProperty("default_ossrh_url")) {
            maven {
                name = "OSSRH"
                url project.property("default_ossrh_url")
                credentials {
                    username project.property("default_ossrh_username")
                    password project.property("default_ossrh_password")
                }
            }
        }
    }
}
